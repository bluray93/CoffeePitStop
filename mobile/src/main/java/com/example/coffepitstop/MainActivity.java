package com.example.coffepitstop;

import android.os.Build;
import android.os.StrictMode;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.amazonaws.auth.AWSSessionCredentials;
import com.amazonaws.auth.CognitoCredentialsProvider;
import com.amazonaws.regions.Region;
import com.amazonaws.regions.Regions;
import com.amazonaws.services.sns.AmazonSNSClient;
import com.amazonaws.services.sns.model.PublishRequest;
import com.amazonaws.services.sns.model.PublishResult;
import com.google.firebase.iid.FirebaseInstanceId;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        if( Build.VERSION.SDK_INT >= 9){
            StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();

            StrictMode.setThreadPolicy(policy);
        }

        String token = FirebaseInstanceId.getInstance().getToken();
        Log.d("TOKEN",token);


        final Button button = findViewById(R.id.button);
        button.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                Log.d("BUTTON", "Premuto");
                // Code here executes on main thread after user presses button

                CognitoCredentialsProvider credentialsProvider = new CognitoCredentialsProvider(
                        "us-east-1:5223d77f-b704-4027-97e2-d6c837276cdb", // ID pool di identit√†
                        Regions.US_EAST_1 // Regione
                );

                if (credentialsProvider == null)
                    System.out.println("Credential is null");
                else
                    System.out.println("Credential is not null ");

                //Aws credentials are generated by Cognito
                AWSSessionCredentials awsSessionCredentials = credentialsProvider.getCredentials();

                System.out.println(awsSessionCredentials.getAWSAccessKeyId() + " and " + awsSessionCredentials.getAWSSecretKey());

                //TODO: topic arn is hardcoded for the moment. Needs to be replaced
                String topicArn = "arn:aws:sns:us-east-1:341434091225:Arg1";

                //SNS client is created from the previous credentials
                AmazonSNSClient snsClient = new AmazonSNSClient(awsSessionCredentials);
                snsClient.setRegion(Region.getRegion(Regions.US_EAST_1));

                // Publish a message to an Amazon SNS topic.
                final String msg = "If you receive this message, publishing a message to an Amazon SNS topic works.";

                //PublishRequest creates the request that is sent with the next method publish()
                final PublishRequest publishRequest = new PublishRequest(topicArn, msg);
                final PublishResult publishResponse = snsClient.publish(publishRequest);

                // Print the MessageId of the message.
                System.out.println("MessageId: " + publishResponse.getMessageId());
            }
        });
    }
}
